<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mapper.feed-mapper">
	<!-- 검색옵션 로딩 -->
	<select id="brandAllData" resultType="Feed_brandVO" >
		SELECT no, name FROM Feed_brand
		ORDER BY no ASC
	</select>
	<select id="cateAllData" resultType="Feed_cateVO" >
		SELECT no, name FROM Feed_cate
		ORDER BY no ASC
	</select>
	<select id="grainAllData" resultType="Feed_grainVO" >
		SELECT no, name FROM Feed_grain
		ORDER BY no ASC
	</select>
	<select id="mtrAllData" resultType="Feed_mtrVO" >
		SELECT no, name FROM Feed_mtr
		ORDER BY no ASC
	</select>
	<select id="targetAllData" resultType="Feed_targetVO" >
		SELECT no, name FROM Feed_target
		ORDER BY no ASC
	</select>
	
	<!-- JOIN : 상품 목록 -->	
	<resultMap type="FeedVO" id="feedList" >
		<result property="no" column="no" />
		<result property="name" column="name" />
		<result property="brand" column="brand" />
		<result property="feedImg" column="feedImg" />
		<result property="category" column="category" />
		<result property="target" column="target" />
		<result property="material" column="material" />
		<result property="grain" column="grain" />
		<result property="hit" column="hit" />
		<result property="lowPrice" column="lowPrice" />
		<result property="favNum" column="favNum" />
		<result property="rvwNum" column="rvwNum" />
		<result property="starAvg" column="starAvg" />
	</resultMap>
	
	<resultMap type="Feed_totalVO" id="feedTotal" extends="feedList" >
		<result property="totalCnt" column="totalCnt" />
		<result property="totalPage" column="totalPage" />
	</resultMap>
	
	<!-- 상품목록 - FROM 이후 선 정의 -->
	<sql id="feedWhere" >
		FROM feed f, store s 
		<where>
			f.no=s.fnum 
			<if test="cate!=999">
				AND category=#{cate} 
			</if>
			<if test="brandList!=null" >
				AND brand IN 
				<foreach collection="brandList" item="brnd" separator="," open="(" close=")" >
					#{brnd}
				</foreach>
			</if>
			<if test="targetList!=null" >
				AND target IN 
				<foreach collection="targetList" item="tg" separator="," open="(" close=")" >
					#{tg}
				</foreach>
			</if>
			<if test="mtrSql!=null" >
				AND REGEXP_LIKE(material, #{mtrSql}) 
			</if>
			<if test="grainList!=null" >
				AND grain IN 
				<foreach collection="grainList" item="grn" separator="," open="(" close=")" >
					#{grn}
				</foreach>
			</if>
			<if test="keyword!=null and keyword!=''" >
				AND REGEXP_LIKE(name, #{keyword}) 
			</if>
		</where>
		<choose>
			<when test="sortOp==1" >
				ORDER BY lowPrice ASC
			</when>
			<when test="sortOp==2" >
				ORDER BY lowPrice DESC
			</when>
			<when test="sortOp==3" >
				ORDER BY favNum DESC
			</when>
			<when test="sortOp==4" >
				ORDER BY rvwNum DESC
			</when>
			<when test="sortOp==5" >
				ORDER BY starAvg DESC
			</when>
			<otherwise>
				ORDER BY hit DESC 
			</otherwise>
		</choose>
	</sql>
	
	<!-- 상품 목록 조회 -->
	<select id="feedAllData" resultMap="feedList" parameterType="java.util.Map">
		SELECT no, name, brand, feedImg, category, target, material, grain, hit, lowPrice, favNum, rvwNum, starAvg, num 
		FROM (SELECT no, name, brand, feedImg, category, target, material, grain, hit, lowPrice, favNum, rvwNum, starAvg, rownum as num 
			FROM (SELECT DISTINCT f.no as no, name, brand, feedImg, category, target, material, grain, hit, 
					(SELECT MIN(price) FROM store WHERE fnum=f.no GROUP BY fnum) as lowPrice, 
					(SELECT COUNT(*) FROM favorite WHERE fnum=f.no) as favNum, 
					(SELECT COUNT(*) FROM review WHERE fnum=f.no) as rvwNum, 
					(SELECT AVG(star) FROM review WHERE fnum=f.no GROUP BY fnum) as starAvg 
				<include refid="feedWhere" />
			)
		) WHERE num BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 조건에 따른 상품 총 개수 조회 -->
	<select id="feedTotalReturn" resultMap="feedTotal" parameterType="java.util.Map">
		SELECT COUNT(*) as totalCnt, CEIL(COUNT(*)/20.0) as totalPage 
		FROM (SELECT DISTINCT f.no as no, name, brand, feedImg, category, target, material, grain, hit, 
				(SELECT MIN(price) FROM store WHERE fnum=f.no GROUP BY fnum) as lowPrice, 
				(SELECT COUNT(*) FROM review WHERE fnum=f.no GROUP BY fnum) as favNum, 
				(SELECT COUNT(*) FROM review WHERE fnum=f.no GROUP BY fnum) as rvwNum, 
				(SELECT AVG(star) FROM review WHERE fnum=f.no GROUP BY fnum) as starAvg 
			<include refid="feedWhere" />
		)
	</select>
	
	<!-- 상품 선택 -->
	<resultMap type="FeedVO" id="feedDetail" >
		<result property="no" column="no" />
		<result property="name" column="name" />
		<result property="brand" column="brand" />
		<result property="feedImg" column="feedImg" />
		<result property="category" column="category" />
		<result property="target" column="target" />
		<result property="material" column="material" />
		<result property="grain" column="grain" />
		<result property="info" column="info" />
		<result property="infoImg" column="infoImg" />
		<result property="brndVO.name" column="brndName" />
		<result property="cateVO.name" column="cateName" />
		<result property="grnVO.name" column="grnName" />
		<result property="tgVO.name" column="tgName" />
		<result property="favNum" column="favNum" />
		<result property="rvwNum" column="rvwNum" />
		<result property="starAvg" column="starAvg" />
	</resultMap>
	
	<!-- 상품 조회수 증가 -->
	<update id="feedHitIncrease" parameterType="int" >
		UPDATE feed 
		SET hit=hit+1 
		WHERE no=#{no} 
	</update>
	
	<!-- 상품 상세정보 -->
	<select id="feedDetailData" resultMap="feedDetail" parameterType="int" >
		SELECT f.no, f.name, brand, feedImg, category, target, material, grain, info, infoImg, 
			fb.name as brndName, fc.name as cateName, fg.name as grnName, ft.name as tgName, 
			(SELECT COUNT(*) FROM favorite WHERE fnum=f.no) as favNum,
			(SELECT COUNT(*) FROM review WHERE fnum=f.no) as rvwNum,
			(SELECT AVG(star) FROM review WHERE fnum=f.no GROUP BY fnum) as starAvg 
		FROM feed f, feed_brand fb, feed_cate fc, feed_grain fg, feed_target ft  
		WHERE f.no=#{no} 
		 AND f.brand=fb.no 
		 AND f.category=fc.no 
		 AND f.grain=fg.no(+) 
		 AND f.target=ft.no(+) 
	</select>
	
	<!-- 상품별 판매처 정보 -->
	<select id="feedStoreData" resultType="Feed_StoreVO" parameterType="int" >
		SELECT no, stName, link, price, fnum 
		FROM store 
		WHERE fnum=#{no} 
		ORDER BY price ASC 
	</select>
	
	<!-- 상품 최저가 -->
	<select id="feedLowPrice" resultType="int" parameterType="int" >
		SELECT MIN(price) 
		FROM store 
		WHERE fnum=#{no} 
		GROUP BY fnum 
	</select>
	
	<!-- 찜하기 -->
	<insert id="feedFavInsert" parameterType="Feed_FavoriteVO">
		INSERT INTO favorite (no, id, fnum) VALUES (
		(SELECT NVL(MAX(no)+1, 1) FROM favorite), #{id}, #{fnum}
		)
	</insert>
	
	<!-- 찜 여부 확인 -->
	<select id="feedFavCheck" resultType="int" parameterType="java.util.Map">
		SELECT no FROM favorite 
		WHERE id=#{id} 
		AND fnum=#{fnum} 
	</select>
	
	<!-- 찜 삭제 -->
	<delete id="feedFavDelete" parameterType="int" >
		DELETE FROM favorite 
		WHERE no=#{no}
	</delete>
	
	<!-- JOIN : 리뷰 -->
	<resultMap type="Feed_ReviewVO" id="reviewData" >
		<result property="no" column="no" />
		<result property="regdate" column="regdate" />
		<result property="rdateS" column="rdateS" />
		<result property="subject" column="subject" />
		<result property="content" column="content" />
		<result property="star" column="star" />
		<result property="id" column="id" />
		<result property="fnum" column="fnum" />
		<result property="dtype" column="dtype" />
		<result property="mvo.name" column="name" />
	</resultMap>
	
	<!-- 상품별 리뷰 정보 -->
	<select id="reviewAllData" resultMap="reviewData" parameterType="java.util.Map" >
		SELECT no, rdateS, subject, content, star, dtype, fnum, id, name, num 
		FROM (
			SELECT no, rdateS, subject, content, star, dtype, fnum, id, name, rownum as num 
			FROM (
				SELECT r.no, TO_CHAR(regdate, 'YYYY-MM-DD HH24:MI') AS rdateS, subject, content, star, dtype, fnum, r.id, m.name as name 
				FROM review r, member m 
				WHERE r.id=m.id 
				AND fnum=#{bno} 
				ORDER BY regdate DESC
			)
		) WHERE num BETWEEN #{start} AND #{end}
		
	</select>
	
	<!-- 상품별 리뷰 갯수 -->
	<select id="reviewAllCnt" resultType="int" parameterType="int" >
		SELECT COUNT(*) 
		FROM (
			SELECT r.no
			FROM review r, member m 
			WHERE r.id=m.id 
			AND fnum=#{bno}
		)
	</select>
	
	<!-- 상품별 리뷰 페이지 -->
	<select id="reviewAllPage" resultType="int" parameterType="int" >
		SELECT CEIL(COUNT(*)/10.0)  
		FROM (
			SELECT r.no
			FROM review r, member m 
			WHERE r.id=m.id 
			AND fnum=#{bno}
		)
	</select>
	
	<!-- 리뷰 입력하기 -->
	<insert id="reviewInsert" parameterType="Feed_ReviewVO">
		INSERT INTO review 
		VALUES (
			(SELECT NVL(MAX(no)+1, 1) FROM review), SYSDATE, #{subject}, #{content}, #{star}, #{fnum}, #{id}, #{dtype}
		)
	</insert>
	
	<!-- 리뷰 수정하기 -->
	<update id="reviewUpdate" parameterType="Feed_ReviewVO" >
		UPDATE review 
		SET subject=#{subject}, content=#{content}, star=#{star}, dtype=#{dtype} 
		WHERE no=#{no} 
	</update>
	
	<!-- 리뷰 삭제하기 -->
	<delete id="reviewDelete" parameterType="int" >
		DELETE FROM review 
		WHERE no=#{no}
	</delete>
	
	<!-- JOIN : 찜한 상품 -->
	<resultMap type="Feed_FavoriteVO" id="favList" >
		<result property="no" column="no" />
		<result property="fdate" column="fdate" />
		<result property="id" column="id" />
		<result property="fnum" column="fnum" />
		<result property="fnum_lowPrice" column="fnum_lowPrice" />
		<result property="fvo.name" column="name" />
		<result property="fvo.feedImg" column="feedImg" />
	</resultMap>
	
	<!-- 찜한 상품 목록 가져오기 -->
	<select id="favListData" resultMap="favList" parameterType="java.util.Map" >
		SELECT no, fdate, id, fnum, name, feedImg, fnum_lowPrice, num 
		FROM (SELECT no, fdate, id, fnum, name, feedImg, fnum_lowPrice, rownum as num 
			  FROM (SELECT fav.no as no, fdate, id, fnum, 
					(SELECT name FROM feed WHERE no=fav.fnum) as name, 
					(SELECT feedImg FROM feed WHERE no=fav.fnum) as feedImg, 
					(SELECT MIN(price) FROM store s WHERE s.fnum=fav.fnum GROUP BY s.fnum) as fnum_lowPrice 
				  FROM favorite fav, feed f 
				  WHERE fav.fnum=f.no 
				  AND id=#{id} 
				  ORDER BY fdate DESC
				)
			  ) WHERE num BETWEEN #{start} AND #{end}
	</select>
	<!-- 찜한 상품 갯수 확인 -->
	<select id="feed_fav_totalNum" resultType="int" parameterType="String">
		SELECT COUNT(*) FROM favorite 
		WHERE id=#{id} 
	</select>
</mapper>


